{"ast":null,"code":"var _jsxFileName = \"/home/nischv/Documents/React/Dossier/dossier/src/Components/Atoms/Avatar/Avatar.tsx\";\nimport { Avatar as IAvatar } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ava = {\n  width: '136px',\n  height: '136px'\n};\n\nconst Avatar = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IAvatar, { ...props,\n      className: props.classname,\n      sx: {\n        width: '136px',\n        height: '136px'\n      },\n      variant: props.variant,\n      src: props.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"names":["Avatar","IAvatar","ava","width","height","props","classname","variant","src"],"sources":["/home/nischv/Documents/React/Dossier/dossier/src/Components/Atoms/Avatar/Avatar.tsx"],"sourcesContent":["import { Avatar as IAvatar, AvatarProps } from \"@mui/material\";\n\nexport interface IAvatarProps extends AvatarProps {\n  variant?: \"circular\" | \"rounded\" | \"square\";\n  src?: any;\n  classname?:string;\n}\nconst ava={\n  width:'136px',height:'136px'\n}\nconst Avatar = (props: IAvatarProps) => {\n  return (\n    <>\n      <IAvatar {...props} className={props.classname} sx={{width:'136px',height:'136px'}} variant={props.variant} src={props.src} />\n    </>\n  );\n};\n\nexport default Avatar;\n"],"mappings":";AAAA,SAASA,MAAM,IAAIC,OAAnB,QAA+C,eAA/C;;;AAOA,MAAMC,GAAG,GAAC;EACRC,KAAK,EAAC,OADE;EACMC,MAAM,EAAC;AADb,CAAV;;AAGA,MAAMJ,MAAM,GAAIK,KAAD,IAAyB;EACtC,oBACE;IAAA,uBACE,QAAC,OAAD,OAAaA,KAAb;MAAoB,SAAS,EAAEA,KAAK,CAACC,SAArC;MAAgD,EAAE,EAAE;QAACH,KAAK,EAAC,OAAP;QAAeC,MAAM,EAAC;MAAtB,CAApD;MAAoF,OAAO,EAAEC,KAAK,CAACE,OAAnG;MAA4G,GAAG,EAAEF,KAAK,CAACG;IAAvH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD,CAND;;KAAMR,M;AAQN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}