{"version":3,"file":"main.014c67b548f9611fa143.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAuBA;AACA;AADA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAAA;AAAA;AAAA;AAAA;AADA;AAsCA;;AA1FA;AA4FA","sources":["webpack://dossier/./src/Components/Organisms/AlphaCard/AlphaCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Box, Typography, TextField, InputBase, Grid } from '@mui/material'\n\nimport avatar from '../../../../public/assets/Avatar1.svg'\nimport TypographyComponent from '../../Atoms/Typography/TypographyComponent'\nimport Avatar from '../../Atoms/Avatar/Avatar'\nimport { makeStyles } from '@material-ui/core'\n\nconst container = {\n  width: '676px',\n  height: '379px',\n  backgroundColor: '#FFFFFF',\n  boxShadow: '0px 2px 6px rgba(0, 0, 0, 0.2)',\n  marginTop: '10px',\n}\nconst imageBox = {\n  alignItems: 'center',\n  justifyContent: 'center',\n  paddingTop: '27px',\n  paddingLeft: '28px',\n  paddingRight: '28px',\n\n  backgroundColor: '#FF6161',\n}\n\nconst avatarBox = {\n  borderRadius: '0%',\n  paddingLeft: '10px',\n  height: '157px',\n  width: '159px',\n  boxSizing: 'border-box',\n}\n\nconst nameBox = {\n  alignItems: 'center',\n  justifyContent: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  paddingTop: '37px',\n  paddingLeft: '25px',\n  paddingRight: '40px',\n}\n\nconst inputBox = {\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingRight: '80px',\n  paddingTop: '38px',\n  marginLeft: '73px',\n  fontFamily: \"Roboto\",\n      fontSize: \"50px\",\n      fontWeight: 700,\n      fontStretch: \"normal\",\n      fontStyle: \"normal\",\n      lineHeight: \"48px\",\n      letterSpacing: \"normal\",\n}\nconst inputBox1 = {\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingRight: '80px',\n  paddingTop: '38px',\n  marginLeft: '73px',\n  fontFamily: \"Roboto\",\n      fontSize: \"12px\",\n      fontWeight: 400,\n      fontStretch: \"normal\",\n      fontStyle: \"normal\",\n      lineHeight: \"18px\",\n      letterSpacing: \"normal\",\n\n}\n\nexport type alphaCardProps = {\n  userName: string\n  designation: string\n  heading: string\n  description: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n  avatar1: {\n    \n  },\n}))\n\nconst AlphaCard: React.FC<alphaCardProps> = (props) => {\n  // const [fileName, setFileName] = useState(\"\");\n  // const [userImage, setUserImage] = useState<any>(User);\n  // const [progress, setProgress] = React.useState(0);\n  // const [showUploadOption, setShowUploadOption] = useState(false);\n  // const [showSnackBar, setShowSnackBar] = useState(false);\n  // const [textEdit, setTextEdit] = useState(false);\n  // const showHoverBoxOnEdit = () => {\n  //   if (textEdit) {\n  //     setTextEdit(false);\n  //   } else {\n  //     setTextEdit(true);\n  //   }\n  // };\n\n  // const showOptions = (e: any) => {\n  //   if (showUploadOption) {\n  //     setShowUploadOption(false);\n  //   } else {\n  //     setShowUploadOption(true);\n  //   }\n  // };\n  // const submitFile = async (e: any) => {\n  //   const formData = new FormData();\n\n  //   formData.append(\"multipartFile\", e.target.files[0]);\n  //   setFileName(e.target.files[0].name);\n  //   setShowSnackBar(true);\n  //   setUserImage(URL.createObjectURL(e.target.files[0]));\n  // };\n  // React.useEffect(() => {\n  //   const timer = setInterval(() => {\n  //     setProgress((oldProgress) => {\n  //       if (oldProgress === 100) {\n  //         setShowSnackBar(false);\n  //         return 0;\n  //       }\n  //       const diff = Math.random() * 10;\n  //       return Math.min(oldProgress + diff, 100);\n  //     });\n  //   }, 500);\n\n  //   return () => {\n  //     clearInterval(timer);\n  //   };\n  // }, []);\n  // const cancelUpload = () => {\n  //   setUserImage(User);\n  //   setFileName(\"User.png\");\n  //   setShowSnackBar(false);\n  // };\n  return (\n    <>\n      <Grid container sx={container}>\n        <Grid item xs={4} sx={imageBox}>\n          <Box sx={{ position: 'absolute', top: '0px' }}></Box>\n          <Box sx={avatarBox}>\n            <Avatar classname='avatar1' variant=\"rounded\" data-testid=\"avatar\" src={avatar} />\n          </Box>\n          \n          <Box>\n            <input\n              accept=\"image/*\"\n              type=\"file\"\n              id=\"upload-button\"\n              data-testid=\"upload-button\"\n              style={{ display: 'none' }}\n            />\n          </Box>\n          <Box sx={nameBox}>\n            <TypographyComponent\n              text={props.userName}\n              variant=\"caption\"\n              color=\"#FFFFFF\"\n            ></TypographyComponent>\n            <TypographyComponent\n              variant=\"caption\"\n              text={props.designation}\n              color=\"#FFFFFF\"\n            ></TypographyComponent>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <Box sx={inputBox}>{props.heading}</Box>\n          <Box sx={inputBox1}>{props.description}</Box>\n\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default AlphaCard\n"],"names":[],"sourceRoot":""}