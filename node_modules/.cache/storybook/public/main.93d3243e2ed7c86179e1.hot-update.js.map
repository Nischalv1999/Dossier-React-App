{"version":3,"file":"main.93d3243e2ed7c86179e1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAWA;AAAA;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAKA;AACA;;AACA;AAEA;AAEA;;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAWA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAoBA;;AAvCA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://dossier/./src/Components/Organisms/SidePanel/SidePanel.tsx","webpack://dossier/./src/Components/Organisms/SidePanel/SidePanel.css","webpack://dossier/./src/Components/Organisms/SidePanel/SidePanel.css?b1b8"],"sourcesContent":["import { Button as MuiButton, Grid } from '@mui/material'\nimport { makeStyles } from '@material-ui/core'\nimport { SidePanelItem } from '../../Molecules/SidePanelItem/SidePanelItem'\nimport { useState } from 'react';\nimport './SidePanel.css'\n\nexport type OptionType = {\n  src: any;\n  text:string;\n  onClick?:any;\n};\nexport type sidePanelProps = {\n  sidePanelItems: Array<OptionType>;\n};\n\nexport const SidePanel = (props: sidePanelProps) => {\n\n  const{sidePanelItems}=props\n\n  var tempFlag=false;\n  const useStyles = makeStyles((theme) => ({\n    Item: {\n    },\n \n  }))\n  var prevIndex=0;\n  const[flag,setFlag]=useState(false)\n  function handleOnClick(item: OptionType, index: number):void\n  {\n    setFlag(true)\n   \n  }\n  const classes = useStyles()\n  return (\n    <Grid \n      container className='side-panel'\n      direction=\"column\"\n      spacing={5}\n      style={{\n        width:'150px',\n        height:'704px',\n      }}\n    >\n      \n      {sidePanelItems.map((item: OptionType, index: number) => { \nreturn(\n    <Grid  item style={{}}>\n\n<SidePanelItem iconUrl={item.src}  onClick={i} classname={classes.Item} text={item.text}></SidePanelItem>\n\n</Grid>\n)})}\n    </Grid>\n  )\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".side-panel{\\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.18);\\n\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/Organisms/SidePanel/SidePanel.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,2CAA2C;;AAE/C\",\"sourcesContent\":[\".side-panel{\\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.18);\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[2]!./SidePanel.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[2]!./SidePanel.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[5].use[2]!./SidePanel.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}