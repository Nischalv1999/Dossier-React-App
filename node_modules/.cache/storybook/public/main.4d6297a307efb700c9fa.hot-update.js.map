{"version":3,"file":"main.4d6297a307efb700c9fa.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAIA;AACA;AACA;AAFA;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAAA;AACA;AACA;AADA;AAKA;AACA;AACA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;;AAOA;AAAA;;AACA;AACA;;AACA;AAEA;AACA;AAFA;AAKA;AADA;AAIA;AADA;AAIA;AADA;;AAWA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;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","sources":["webpack://dossier/./src/Constants/Avatar/Avatar.stories.tsx","webpack://dossier/./src/Components/Organisms/FirstPageInResume/index.tsx","webpack://dossier/./src/Components/Organisms/Header/Header.tsx","webpack://dossier/./src/Constants/Avatar/Avatar.tsx","webpack://dossier/./src/ sync ^\\.(?bf76"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\nimport Avatar, {IAvatarProps} from \\\"./Avatar\\\";\\nimport User from \\\"../../../../public/assets/user.svg\\\";\\nimport { makeStyles } from \\\"@material-ui/core\\\";\\n\\n\\nexport default {\\n  title: \\\"Atoms/Avatar\\\",\\n  component: Avatar,\\n}  as ComponentMeta<typeof Avatar>;\\n\\nconst Template: ComponentStory<typeof Avatar> = (args:IAvatarProps) => <Avatar {...args} />;\\n\\nexport const user = Template.bind({});\\nuser.args = {\\n  src: User,\\n};\\n\\n\\nexport const user2 = Template.bind({});\\nuser2.args = {\\n  src: User,\\n\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"user\":{\"startLoc\":{\"col\":48,\"line\":12},\"endLoc\":{\"col\":91,\"line\":12},\"startBody\":{\"col\":48,\"line\":12},\"endBody\":{\"col\":91,\"line\":12}},\"user2\":{\"startLoc\":{\"col\":48,\"line\":12},\"endLoc\":{\"col\":91,\"line\":12},\"startBody\":{\"col\":48,\"line\":12},\"endBody\":{\"col\":91,\"line\":12}}};\n    \nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\nimport Avatar, {IAvatarProps} from \"./Avatar\";\nimport User from \"../../../../public/assets/user.svg\";\nimport { makeStyles } from \"@material-ui/core\";\n\n\nexport default {\n  title: \"Atoms/Avatar\",\n  component: Avatar,\n}  as ComponentMeta<typeof Avatar>;\n\nconst Template: ComponentStory<typeof Avatar> = (args:IAvatarProps) => <Avatar {...args} />;\n\nexport const user = Template.bind({});;\nuser.args = {\n  src: User,\n};\n\n\nexport const user2 = Template.bind({});\nuser2.args = {\n  src: User,\n\n};\n\n\n\nuser.parameters = { storySource: { source: \"(args:IAvatarProps) => <Avatar {...args} />\" }, ...user.parameters };\nuser2.parameters = { storySource: { source: \"(args:IAvatarProps) => <Avatar {...args} />\" }, ...user2.parameters };","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, InputBase, Grid } from \"@mui/material\";\nimport theme from \"../../../theme/theme\";\nimport Avatar from \"../../Atoms/Avatar/Avatar\";\nimport UploadImageOptions from \"../../Molecules/UploadImageOptions/UploadImageOptions\";\n\nimport User from \"../../../../public/assets/user.svg\";\nimport UploadImage from \"../../../../public/assets/upload.png\";\nimport LockIcon from \"../../../../public/assets/lock-icon.svg\";\nimport ThreeDots from \"../../../../public/assets/more.png\";\nimport BoxIcon from \"../../../../public/assets/Boxplus-icon.svg\";\n\nimport Icon from '../../Atoms/Icon/Icon'\nimport UploadDialogueBox from \"../../Molecules/UploadDialogueBox/UploadDialogueBox\";\nimport TypographyComponent from \"../../Atoms/Typography/TypographyComponent\";\n\nconst container = {\n  width: \"676px\",\n  height: \"379px\",\n  backgroundColor: '#FFFFFF',\n  boxShadow: \"0px 2px 6px rgba(0, 0, 0, 0.2)\",\n  marginTop: \"10px\",\n};\nconst imageBox = {\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  paddingTop: \"27px\",\n  paddingLeft: \"28px\",\n  paddingRight: \"28px\",\n\n  backgroundColor: '#FF6161',\n};\n\nconst avatarBox = {\n  borderRadius: \"0%\",\n  paddingLeft: \"10px\",\n  height: \"157px\",\n  width: \"159px\",\n  boxSizing: \"border-box\",\n};\nconst textColor = {\n  color: '#FFFFFF',\n};\nconst nameBox = {\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  paddingTop: \"37px\",\n  paddingLeft: \"25px\",\n  paddingRight: \"40px\",\n};\nconst borderDashed = {\n  border: `2px dashed #7E64F3`,\n};\nconst portfolioText = {\n  fontWeight: 700,\n  fontSize: \"50px\",\n  alignItems: \"center\",\n  display: \"flex\",\n  lineHeight: \"56px\",\n\n  color: \"text.primary\",\n  width: \"310px\",\n  height: \"125px\",\n};\nconst secondText = {\n  fontWeight: 400,\n  fontSize: \"12px\",\n  paddingLeft: \"2px\",\n  marginTop: \"10px\",\n  lineHeight: \"18px\",\n\n  color: \"text.secondary\",\n  width: \"283px\",\n  height: \"60px\",\n  alignItems: \"center\",\n  display: \"flex\",\n};\nconst inputBox = {\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  paddingRight: \"80px\",\n  paddingTop: \"38px\",\n  marginLeft: \"73px\",\n};\nconst fileUpload = () => {\n  document.getElementById(\"upload-button\")?.click();\n};\nconst options = [\n  {\n    src: UploadImage,\n    action: fileUpload,\n  },\n  {\n    src: LockIcon,\n  },\n  {\n    src: ThreeDots,\n  },\n  {\n    src: BoxIcon,\n  },\n];\n\nexport type FirstPageInResumeProps = {\n  userName: string;\n  designation: string;\n  heading: string;\n  description: string;\n};\nconst FirstPageInResume: React.FC<FirstPageInResumeProps> = (props) => {\n  const [fileName, setFileName] = useState(\"\");\n  const [userImage, setUserImage] = useState<any>(User);\n  const [progress, setProgress] = React.useState(0);\n  const [showUploadOption, setShowUploadOption] = useState(false);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [textEdit, setTextEdit] = useState(false);\n  const showHoverBoxOnEdit = () => {\n    if (textEdit) {\n      setTextEdit(false);\n    } else {\n      setTextEdit(true);\n    }\n  };\n\n  const showOptions = (e: any) => {\n    if (showUploadOption) {\n      setShowUploadOption(false);\n    } else {\n      setShowUploadOption(true);\n    }\n  };\n  const submitFile = async (e: any) => {\n    const formData = new FormData();\n\n    formData.append(\"multipartFile\", e.target.files[0]);\n    setFileName(e.target.files[0].name);\n    setShowSnackBar(true);\n    setUserImage(URL.createObjectURL(e.target.files[0]));\n  };\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          setShowSnackBar(false);\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  const cancelUpload = () => {\n    setUserImage(User);\n    setFileName(\"User.png\");\n    setShowSnackBar(false);\n  };\n  return (\n    <>\n      <Grid container sx={container}>\n        <Grid item xs={4} sx={imageBox}>\n          <Box sx={{ position: \"absolute\", top: \"0px\" }}>\n            {showUploadOption ? (\n              <UploadImageOptions\n                options={options}\n                data-testid=\"upload-options\"\n              />\n            ) : (\n              <></>\n            )}\n          </Box>\n          {showUploadOption ? (\n            <Box sx={[avatarBox, borderDashed]}>\n              {/* <Avatar\n                variant=\"circular\"\n                data-testid=\"avatar\"\n                src={userImage}\n                onClick={(e) => showOptions(e)}\n              /> */}\n              <Icon imageSrc={userImage} onClick={(e)=> showOptions(e)}></Icon>\n\n            </Box>\n          ) : (\n            <Box sx={avatarBox}>\n              <Avatar\n                variant=\"circular\"\n                data-testid=\"avatar\"\n                src={userImage}\n                onClick={(e) => showOptions(e)}\n              />\n            </Box>\n          )}\n\n          <Box>\n            <input\n              accept=\"image/*\"\n              type=\"file\"\n              id=\"upload-button\"\n              data-testid=\"upload-button\"\n              style={{ display: \"none\" }}\n              onChange={submitFile}\n            />\n          </Box>\n\n          <Box sx={nameBox}>\n          <TypographyComponent\n              text={props.userName}\n              variant=\"caption\"\n              color=\"#FFFFFF\"\n            ></TypographyComponent>\n            <TypographyComponent\n              variant=\"caption\"\n              text={props.designation}\n              color=\"#FFFFFF\"\n            ></TypographyComponent>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <Box sx={inputBox}>\n            {textEdit ? (\n              <InputBase\n                multiline\n                sx={[portfolioText, borderDashed]}\n                onClick={showHoverBoxOnEdit}\n                value={props.heading}\n                data-testid=\"hover-input1\"\n              />\n            ) : (\n              <InputBase\n                multiline\n                sx={portfolioText}\n                onClick={showHoverBoxOnEdit}\n                value={props.heading}\n                data-testid=\"input1\"\n              />\n            )}\n            <InputBase\n              multiline\n              data-testid=\"input2\"\n              sx={secondText}\n              value={props.description}\n            />\n          </Box>\n          {showSnackBar ? (\n            <UploadDialogueBox\n              data-testid=\"progress-bar\"\n              imageName={fileName}\n              progress={progress}\n              onClose={cancelUpload}\n            />\n          ) : (\n            <></>\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default FirstPageInResume;\n","import { Button as MuiButton, Grid } from '@mui/material'\nimport { makeStyles } from '@material-ui/core'\nimport User from '../../../../public/assets/user.svg'\nimport Help from '../../../../public/assets/help.svg'\nimport Notification from '../../../../public/assets/notification.svg'\n\nimport Icon from '../../Atoms/Icon/Icon'\nimport TypographyComponent from '../../Atoms/Typography/TypographyComponent'\nimport Dossier from '../../../../public/assets/dossier-header.svg'\nimport Avatar from '../../Atoms/Avatar/Avatar'\n\nexport type headerProps = {}\n\nexport const Header = (props: headerProps) => {\n  const useStyles = makeStyles((theme) => ({\n    dossierIcon: {\n      paddingLeft: 'auto',\n      paddingUp: 'auto',\n      width: '18px',\n      height: '18px',\n      paddingTop:'7px'\n    },\n    icon: {\n      paddingLeft: '8px',\n      paddingTop:'7px'\n\n    },\n    avatar:{\n    height:'36px',\n    width:'36px',\n    paddingBottom:'3px',\n    paddingLeft: '7px',\n\n    },\n    text: {\n      fontSize: '18px',\n      lineHeight: '20px',\n      width: '76px',\n      height: '20px',\n      fontFamily: 'Poppins',\n      fontWeight: 500,\n      paddingTop:'7px'\n    },\n  }))\n  const classes = useStyles()\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={1}\n      style={{\n        border: '1px solid #D4D2D9',\n        width:'1336px',\n        height:'55px',\n        \n\n      }}\n    >\n      <Grid item>\n        <Icon imageSrc={Dossier} classname={classes.dossierIcon}></Icon>\n      </Grid>\n      <Grid item md={10} sm={4} style={{}}>\n        <TypographyComponent\n          variant=\"body1\"\n          text=\"DOSSIER\"\n          color=\"#4C2CD9\"\n          classname={classes.text}\n        ></TypographyComponent>\n      </Grid>\n      <Grid item >\n        <Icon imageSrc={Help} classname={classes.icon}></Icon>\n      </Grid>\n      <Grid item >\n        <Icon imageSrc={Notification} classname={classes.icon}></Icon>\n      </Grid>\n      <Grid item >\n        <Avatar variant={'circular'} src={User} classname={classes.avatar}></Avatar>\n      </Grid>\n    </Grid>\n  )\n}\n","import { Avatar as IAvatar, AvatarProps } from \"@mui/material\";\n\nexport interface IAvatarProps extends AvatarProps {\n  src?: any;\n  classname?:string;\n}\n\nconst Avatar = (props: IAvatarProps) => {\n  return (\n    <>\n      <IAvatar {...props} className={props.classname} src={props.src} />\n    </>\n  );\n};\n\nexport default Avatar;\n","var map = {\n\t\"./Components/Atoms/Button/Button.stories.tsx\": \"./src/Components/Atoms/Button/Button.stories.tsx\",\n\t\"./Components/Atoms/Icon/Icon.stories.tsx\": \"./src/Components/Atoms/Icon/Icon.stories.tsx\",\n\t\"./Components/Atoms/SearchBar/SearchBar.stories.tsx\": \"./src/Components/Atoms/SearchBar/SearchBar.stories.tsx\",\n\t\"./Components/Atoms/Typography/TypographyComponent.stories.tsx\": \"./src/Components/Atoms/Typography/TypographyComponent.stories.tsx\",\n\t\"./Components/Molecules/FooterCardItem/FooterCardItem.stories.tsx\": \"./src/Components/Molecules/FooterCardItem/FooterCardItem.stories.tsx\",\n\t\"./Components/Molecules/PrimaryButtons/PrimaryButtons.stories.tsx\": \"./src/Components/Molecules/PrimaryButtons/PrimaryButtons.stories.tsx\",\n\t\"./Components/Molecules/SidePanelItem/SidePanelItem.stories.tsx\": \"./src/Components/Molecules/SidePanelItem/SidePanelItem.stories.tsx\",\n\t\"./Components/Molecules/UploadDialogueBox/UploadDialogueBox.stories.tsx\": \"./src/Components/Molecules/UploadDialogueBox/UploadDialogueBox.stories.tsx\",\n\t\"./Components/Molecules/UploadImageOptions/UploadImageOptions.stories.tsx\": \"./src/Components/Molecules/UploadImageOptions/UploadImageOptions.stories.tsx\",\n\t\"./Components/Organisms/AlphaCard/AlphaCard.stories.tsx\": \"./src/Components/Organisms/AlphaCard/AlphaCard.stories.tsx\",\n\t\"./Components/Organisms/FirstPageInResume/index.stories.tsx\": \"./src/Components/Organisms/FirstPageInResume/index.stories.tsx\",\n\t\"./Components/Organisms/FooterList/FooterList.stories.tsx\": \"./src/Components/Organisms/FooterList/FooterList.stories.tsx\",\n\t\"./Components/Organisms/Header/Header.stories.tsx\": \"./src/Components/Organisms/Header/Header.stories.tsx\",\n\t\"./Components/Organisms/SidePanel/SidePanel.stories.tsx\": \"./src/Components/Organisms/SidePanel/SidePanel.stories.tsx\",\n\t\"./Components/Organisms/TemplateList/TemplateList.stories.tsx\": \"./src/Components/Organisms/TemplateList/TemplateList.stories.tsx\",\n\t\"./Constants/Avatar/Avatar.stories.tsx\": \"./src/Constants/Avatar/Avatar.stories.tsx\",\n\t\"./stories/Button.stories.tsx\": \"./src/stories/Button.stories.tsx\",\n\t\"./stories/Header.stories.tsx\": \"./src/stories/Header.stories.tsx\",\n\t\"./stories/Page.stories.tsx\": \"./src/stories/Page.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}